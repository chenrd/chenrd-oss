<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:task="http://www.springframework.org/schema/task"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    					http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                        http://www.springframework.org/schema/context
    					http://www.springframework.org/schema/context/spring-context-4.0.xsd
    					http://www.springframework.org/schema/tx
    					http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
    					http://www.springframework.org/schema/aop   
           				http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
           				http://www.springframework.org/schema/util
           				http://www.springframework.org/schema/util/spring-util-4.0.xsd
           				http://www.springframework.org/schema/task  
           				http://www.springframework.org/schema/task/spring-task.xsd">
	
	<!-- 默认配置在该类的同层jar下面 -->
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:com/chenrd/shiro/ehcache/ehcache.xml"/>  
	</bean>
	
	<bean id="userEhcacheHandle" class="com.chenrd.shiro.ehcache.UserEhcacheHandle">
		<constructor-arg ref="cacheManager"/>
	</bean>
	
	<!-- Realm实现 -->
	<bean id="credentialsMatcher" class="com.chenrd.shiro.matcher.RetryLimitHashedCredentialsMatcher">
        <constructor-arg ref="cacheManager"/>
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="2"/>
        <property name="storedCredentialsHexEncoded" value="true"/>
    </bean>
	
	<bean id="myRealm" class="com.chenrd.shiro.UserRealm">
		<property name="userEhcacheHandle" ref="userEhcacheHandle"/>
		<property name="cachingEnabled" value="true"/>
        <property name="authenticationCachingEnabled" value="true"/>
        <property name="authenticationCacheName" value="authenticationCache"/>
        <property name="authorizationCachingEnabled" value="true"/>
        <property name="authorizationCacheName" value="authorizationCache"/>
        <property name="casServerUrlPrefix" value="${cas.url}"/>
        <property name="casService" value="${apply.url}/cas"/>
	</bean>
	
	<!-- 会话ID生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>
    
    <!-- 会话Cookie模板 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="sid"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="-1"/>
    </bean>
    
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="2592000"/><!-- 30天 -->
    </bean>
    
    <!-- rememberMe管理器 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位）-->
        <property name="cipherKey"
                  value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>
    
    <!-- 会话DAO -->
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>
    
    <!-- 会话验证调度器 -->
    <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
        <property name="sessionValidationInterval" value="1800000"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>
    
    
    <!-- 会话管理器 
    	实现session的共享
    -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="globalSessionTimeout" value="1800000"/>
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <property name="sessionDAO" ref="sessionDAO"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
    </bean>
    
    <bean id="casSubjectFactory" class="org.apache.shiro.cas.CasSubjectFactory"/>
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="myRealm"/>
		<property name="cacheManager" ref="cacheManager"/>
		<property name="sessionManager" ref="sessionManager"/>
		<property name="rememberMeManager" ref="rememberMeManager"/>
		<property name="subjectFactory" ref="casSubjectFactory"/>
	</bean>
	
	<!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>
    
    <bean id="casFilter" class="com.chenrd.shiro.filter.UserCasFilter">
    	<constructor-arg ref="cacheManager"/> 
	    <property name="failureUrl" value="/casFailure.jsp"/>
		<property name="userService" ref="userService"/>
		<property name="applyKey" value="${apply.key}"/>
	</bean> 
	
	<!-- /jaxws/services/**=anon -->
	<bean id="filterChainManager" class="com.chenrd.shiro.filter.CustomDefaultFilterChainManager">
        <property name="loginUrl" value="${cas.url}/login?service=${apply.url}/cas"/>
        <property name="successUrl" value="/"/>
        <property name="unauthorizedUrl" value="/authority"/>
        <property name="customFilters">  
	        <util:map>  
	            <entry key="cas" value-ref="casFilter"/>
	        </util:map>  
	    </property>
        <property name="defaultFilterChainDefinitions">
            <value>
				/cas=cas
				/**=authc
            </value>
        </property>
    </bean>
    
    <bean id="filterChainResolver" class="org.apache.shiro.web.filter.mgt.PathMatchingFilterChainResolver">
        <property name="filterChainManager" ref="filterChainManager"/>
    </bean>

    <!-- Shiro的Web过滤器 
    	web.xml里面配置DelegatingFilterProxy
    	DelegatingFilterProxy.initFilterBean方法会通过WebApplicationContext实体获取到shiroFilter进行过滤
    -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject" ref="shiroFilter"/>
        <property name="targetMethod" value="setFilterChainResolver"/>
        <property name="arguments" ref="filterChainResolver"/>
    </bean>
    
	<bean class="com.chenrd.shiro.ShiroFilerChainManager" init-method="init">
		<property name="filterChainManager" ref="filterChainManager"/>
		<property name="powerService" ref="powerService"/>
		<property name="applyKey" value="${apply.key}"/>
	</bean>
	
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
	    <property name="securityManager" ref="securityManager"/>
	</bean>
</beans>
