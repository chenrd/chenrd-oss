<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:task="http://www.springframework.org/schema/task"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    					http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                        http://www.springframework.org/schema/context
    					http://www.springframework.org/schema/context/spring-context-4.0.xsd
    					http://www.springframework.org/schema/tx
    					http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
    					http://www.springframework.org/schema/aop   
           				http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
           				http://www.springframework.org/schema/util
           				http://www.springframework.org/schema/util/spring-util-4.0.xsd
           				http://www.springframework.org/schema/task  
           				http://www.springframework.org/schema/task/spring-task.xsd">
	
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:application.properties</value>
				<value>classpath*:jdbc.properties</value>
			</list>
		</property>
	</bean>
	<util:properties id="settings" location="classpath:application.properties" />
	
	
	<context:annotation-config />
	<context:component-scan base-package="com.chenrd" />
	
	<!-- <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
	    <property name="jndiName">
	        <value>java:comp/env/jdbc/oss</value>
	    </property>
	</bean> -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="5" />
		<property name="minIdle" value="5" />
		<property name="maxActive" value="20" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<!--<property name="poolPreparedStatements" value="true" />-->
		<!--<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />-->

		<!-- 配置监控统计拦截的filters -->
		<!--<property name="filters" value="stat" />-->
	</bean>
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" >
		<property name="dataSource" ref="dataSource"></property>
		<property name="packagesToScan">
			<list>
				<value>com.chenrd.sys</value>
				<value>com.chenrd.app</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<!-- 开启查询缓存 -->
				<prop key="hibernate.cache.use_query_cache">false</prop>
				<!-- 配置二级缓存 --> 
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<!-- 强制Hibernate以更人性化的格式将数据存入二级缓存 -->  
      			<prop key="hibernate.cache.use_structured_entries">false</prop> 
      			<!-- Hibernate将收集有助于性能调节的统计数据 -->  
      			<prop key="hibernate.generate_statistics">false</prop>
      			<!-- 指定缓存配置文件位置 -->
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
				<prop key="current_session_context_class">thread</prop>
			</props>
		</property>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="false"/>

	<!-- 切面 -->
	<aop:aspectj-autoproxy proxy-target-class="true" />
	
	<!-- <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="-1"/>
		<property name="maxInMemorySize" value="20480"/>
		<property name="defaultEncoding" value="utf-8"/>
		<property name="uploadTempDir">
			<bean class="org.springframework.core.io.FileSystemResource">
				<constructor-arg>
				</constructor-arg>
			</bean>
		</property>
	</bean> -->
	
	<!-- 线程池pool-size大小初始化5个线程，最大25个，最长的等待队列100，keep-alive线程池空闲的情况下线程执行结束之后等待多少秒在关闭 -->
	<task:executor id="executor"  pool-size="5-25" queue-capacity="100" keep-alive="0"/>
	<task:scheduler id="scheduler" pool-size="10" />
	<task:annotation-driven executor="executor" scheduler="scheduler" />
	
	<bean id="powerScan" class="com.chenrd.oss.power.cache.PowerScan">
		<property name="applyKey" value="${apply.key}"/>
		<property name="sessionFactorys">
			<list>
				<ref bean="sessionFactory"/>
			</list>
		</property>
	</bean>
</beans>
