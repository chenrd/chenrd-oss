<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
            http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
            http://www.springframework.org/schema/context  
            http://www.springframework.org/schema/context/spring-context-4.0.xsd  
            http://www.springframework.org/schema/tx  
            http://www.springframework.org/schema/tx/spring-tx-4.0.xsd  
            http://www.springframework.org/schema/jdbc  
            http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
            http://www.springframework.org/schema/mvc  
            http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
            http://www.springframework.org/schema/aop   
           	http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">
    
    <context:property-placeholder ignore-resource-not-found="true" location="classpath*:/application.properties" />
    <!-- 配置freeMarker的模板路径 -->
	<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="classpath:/" />
		<property name="freemarkerVariables">
			<map>
				<entry key="url"><bean class="com.chenrd.spring.lable.UrlLable"/></entry>
				<entry key="func"><bean class="com.chenrd.shiro.lable.FuncVariable"/></entry>
				<entry key="btnGp"><bean class="com.chenrd.shiro.lable.BeyondAdminBtnGroupVariable"/></entry>
				<entry key="xml_escape"><bean class="freemarker.template.utility.XmlEscape"/></entry>
				<entry key="applyUrl" value="${apply.url}"/>
			</map>
		</property>
		<!-- FreeMarker默认每隔5秒检查模板是否被更新，如果已经更新了，就会重新加载并分析模板。 但经常检查模板是否更新可能比较耗时。如果你的应用运行在生产模式下，而且你预期模板不会经常更新， 
			则可以将更新的延迟时间延长至一个小时或者更久。 可以通过为freemarkerSettings属性设置template_update_delay达到这一目的 -->
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">1</prop>
				<prop key="defaultEncoding">utf-8</prop>
				<prop key="tag_syntax">auto_detect</prop><!-- 设置标签类型 两种：[] 和 <> 。[] 这种标记解析要快些 -->
				<prop key="classic_compatible">true</prop><!-- 可以满足一般需要。默认情况变量为null则替换为空字符串，如果需要自定义，写上EmptyValue of fbysss的形式即可  -->
			</props>
		</property>
		<!-- 一下语句可以也可以配置freemarkerSettings属性，代码更为简洁 -->
		<!-- <property name="freemarkerSettings" ref="freemarkerConfiguration"></property> -->
	</bean>
	
	<!-- ②：启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter" >
		<property name="messageConverters">
			<list>
				<!-- 负责读取二进制格式的数据和写出二进制格式的数据 application/octet-stream -->
   				<bean class='org.springframework.http.converter.ByteArrayHttpMessageConverter'/>
				<!-- 负责读取和写入json格式的数据  默认：application/json-->
				<bean class='org.springframework.http.converter.json.MappingJackson2HttpMessageConverter'/>
				<!-- 负责读取字符串格式的数据和写出二进制格式的数据  默认text/plain-->
				<bean class='org.springframework.http.converter.StringHttpMessageConverter'>
					<property name="supportedMediaTypes">
						<list>
							<value>text/html;charset=UTF-8</value>
						</list>
					</property>
				</bean>
				<!-- 负责读取资源文件和写出资源文件数据 -->
				<bean class='org.springframework.http.converter.ResourceHttpMessageConverter'></bean>
				<!-- 负责读取和写入 xml中  默认：application/xml-->
				<bean class='org.springframework.http.converter.xml.SourceHttpMessageConverter'></bean>
				
				<!-- <bean class='org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter'></bean> -->
	 		 	<!-- <bean class='org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter'/> -->
	 		 </list>
		</property>
	</bean>
	
	<!-- 自动扫描且只扫描@Controller -->
	<context:component-scan base-package="com.chenrd" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>
	<mvc:annotation-driven />
	
	<!-- 配置freeMarker视图解析器 -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
	    <property name="prefix" value="/" />
	    <property name="suffix" value=".html"/>
	    <property name="allowSessionOverride" value="true" />
	    <property name="exposeSpringMacroHelpers" value="true" />
		<property name="exposeRequestAttributes" value="true" />
		<property name="exposeSessionAttributes" value="true" />
		<property name="requestContextAttribute" value="request" /> 
	    <property name="contentType" value="text/html;charset=UTF-8"/>
	    <property name="redirectContextRelative" value="false" />
	</bean>
	
	<!-- 设置文件上传解析 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>  

	<mvc:resources mapping="/js/**" location="/js/" order="1" />
	<mvc:resources mapping="/l10n/**" location="/l10n/" order="2" />
	<mvc:resources mapping="/tpl/**" location="/tpl/" order="3" />
	
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
	
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>
</beans>
