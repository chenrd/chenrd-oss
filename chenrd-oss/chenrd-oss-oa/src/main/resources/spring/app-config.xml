<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:task="http://www.springframework.org/schema/task"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    					http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                        http://www.springframework.org/schema/context
    					http://www.springframework.org/schema/context/spring-context-4.0.xsd
    					http://www.springframework.org/schema/tx
    					http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
    					http://www.springframework.org/schema/aop   
           				http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
           				http://www.springframework.org/schema/util
           				http://www.springframework.org/schema/util/spring-util-4.0.xsd
           				http://www.springframework.org/schema/task  
           				http://www.springframework.org/schema/task/spring-task.xsd">
	
	
	<context:annotation-config />
	<!-- 切面 -->
	<aop:aspectj-autoproxy proxy-target-class="true" />
	<tx:annotation-driven transaction-manager="transactionManager"/>
	<context:component-scan base-package="com.chenrd" />
	
	<context:property-placeholder ignore-resource-not-found="true" location="classpath*:/*.properties" />
	<util:properties id="settings" location="classpath:application.properties" />
	<!-- 定时任务配置 -->
	<bean name="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean"> 
     <!--  通过applicationContextSchedulerContextKey属性配置spring上下文 -->
       <property name="startupDelay" value="30"/>
    </bean>
    
    
    <!-- 开启线程池 最小-最大线程数，容器最长队列，线程空闲存活时间-->
	<task:executor id="executor" pool-size="1-5" queue-capacity="10" keep-alive="120"/>
	<!-- 开启定时任务 -->
	<!-- <task:scheduler id="scheduler" pool-size="10" /> -->
	<!-- 开启定时任务注解  可以通过@Scheduled @Async 注解定时任务-->
	<!-- <task:annotation-driven executor="executor" scheduler="scheduler" /> -->
	
	<!-- 下面部分：事物、数据源、SessionFactory配置 -->
	<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init" destroy-method="close"> 
		<property name="forceShutdown" value="true" /> 
	</bean> 
	<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp"/> 
	<bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager"> 
		<property name="transactionManager" ref="atomikosTransactionManager" /> 
		<property name="userTransaction" ref="atomikosUserTransaction" /> 
		<property name="allowCustomIsolationLevels" value="true" /> 
		<property name="defaultTimeout" value="300"/>
	</bean>
	
	<bean id="defaultDataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close"> 
		<property name="uniqueResourceName" value="firstDS" /> 
		<property name="xaDataSourceClassName" value="${default.jdbc.driver}" /> 
		<property name="xaProperties"> 
			<props> 
				<prop key="user">${default.jdbc.username}</prop> 
				<prop key="password">${default.jdbc.password}</prop> 
				<prop key="URL">${default.jdbc.url}</prop> 
			</props> 
		</property> 
		<property name="poolSize" value="${default.jdbc.poolSize}" /> 
		<property name="minPoolSize" value="${default.jdbc.minPoolSize}" /> 
		<property name="maxPoolSize" value="${default.jdbc.maxPoolSize}" /> 
		<property name="testQuery" value="${default.jdbc.testQuery}" /> 
	</bean>
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" >
		<property name="dataSource" ref="defaultDataSource"></property>
		<property name="packagesToScan">
			<list>
				<value>com.chenrd.oa</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<!-- 开启查询缓存 -->
				<prop key="hibernate.cache.use_query_cache">false</prop>
				<!-- 配置二级缓存 --> 
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<!-- 强制Hibernate以更人性化的格式将数据存入二级缓存 -->  
      			<prop key="hibernate.cache.use_structured_entries">false</prop> 
      			<!-- Hibernate将收集有助于性能调节的统计数据 -->  
      			<prop key="hibernate.generate_statistics">false</prop>
      			<!-- 指定缓存配置文件位置 -->
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
				<prop key="hibernate.current_session_context_class">jta</prop>
				<prop key="hibernate.transaction.factory_class">org.hibernate.engine.transaction.internal.jta.CMTTransactionFactory</prop>
		        <prop key="hibernate.transaction.manager_lookup_class">com.atomikos.icatch.jta.hibernate3.TransactionManagerLookup</prop>
			</props>
		</property>
	</bean>
	
	<bean id="powerScan" class="com.chenrd.oss.power.cache.PowerScan">
		<property name="applyKey" value="${apply.key}"/>
		<property name="sessionFactorys">
			<list>
				<ref bean="sessionFactory"/>
			</list>
		</property>
	</bean>
</beans>
